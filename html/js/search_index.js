var search_data = {"index":{"searchIndex":["autofoo","foo","getoptlong","mycli","myset","object","range","ranges","todo","trig","unittest","<<()","==()","add()","add()","bar()","bar=()","content()","cos()","delete()","delete()","display()","each()","equal()","equal?()","grep()","hello()","include?()","include?()","member?()","new()","new()","new()","normalize()","normalize!()","priorities()","process()","section_number()","setup()","sin()","size()","size()","test_default()","test_that_it_will_not_blend()","test_that_kitty_can_eat()","to_s()","to_s()","usage()","readme"],"longSearchIndex":["autofoo","foo","getoptlong","mycli","myset","object","range","ranges","todo","trig","unittest","ranges#<<()","ranges#==()","myset#add()","ranges#add()","foo#bar()","foo#bar=()","ranges#content()","trig::cos()","myset#delete()","ranges#delete()","object#display()","ranges#each()","ranges#equal()","range#equal?()","object#grep()","mycli#hello()","myset#include?()","ranges#include?()","ranges#member?()","foo::new()","myset::new()","ranges::new()","ranges#normalize()","ranges#normalize!()","todo#priorities()","object#process()","ranges#section_number()","unittest#setup()","trig::sin()","myset#size()","ranges#size()","unittest#test_default()","unittest#test_that_it_will_not_blend()","unittest#test_that_kitty_can_eat()","myset#to_s()","ranges#to_s()","object#usage()",""],"info":[["AutoFoo","","AutoFoo.html","",""],["Foo","","Foo.html","",""],["GetoptLong","","GetoptLong.html","",""],["MyCLI","","MyCLI.html","","<p>a simple command interpretor\n"],["Myset","","Myset.html","","<p>Ruby Sets management\n"],["Object","","Object.html","",""],["Range","","Range.html","","<p>Define a special equality for Ruby ranges\n"],["Ranges","","Ranges.html","","<p>Multiple section ranges\n<p>This class handles discontinuated ranges, there are a collection of ranges\nwith …\n"],["Todo","","Todo.html","","<p>This is just a Ruby module to handle the project todo list under Eclipse\n<p>For some reasons the Eclipse …\n"],["Trig","","Trig.html","","<p>Small trigonometric\n<p>Ruby module example\n"],["UnitTest","","UnitTest.html","",""],["<<","Ranges","Ranges.html#method-i-3C-3C","(elt)","<p>append operator\n"],["==","Ranges","Ranges.html#method-i-3D-3D","(other_range)","<p>overwrite equality\n"],["add","Myset","Myset.html#method-i-add","(elt)","<p>add a new element\n"],["add","Ranges","Ranges.html#method-i-add","(elt)","<p>add a subrange\n"],["bar","Foo","Foo.html#method-i-bar","()","<p>getter\n"],["bar=","Foo","Foo.html#method-i-bar-3D","(newval)","<p>setter\n"],["content","Ranges","Ranges.html#method-i-content","()","<p>getter\n"],["cos","Trig","Trig.html#method-c-cos","(x)","<p>Trigonometric Cos function\n"],["delete","Myset","Myset.html#method-i-delete","(elt)","<p>remove an element\n"],["delete","Ranges","Ranges.html#method-i-delete","(elt)","<p>remove a subrange\n"],["display","Object","Object.html#method-i-display","(filename)","<p>Display a file\n"],["each","Ranges","Ranges.html#method-i-each","(&blk)","<p>iterator\n"],["equal","Ranges","Ranges.html#method-i-equal","(other_range)","<p>equality\n"],["equal?","Range","Range.html#method-i-equal-3F","(other_range)","<p>Redefine a new equal making x..y == x…z when z == y.succ\n"],["grep","Object","Object.html#method-i-grep","(filename, pattern)","<p>Display a file\n"],["hello","MyCLI","MyCLI.html#method-i-hello","(name)",""],["include?","Myset","Myset.html#method-i-include-3F","(elt)","<p>check if an element is in the set\n"],["include?","Ranges","Ranges.html#method-i-include-3F","(val)","<p>check if a subrange is in the range\n"],["member?","Ranges","Ranges.html#method-i-member-3F","(val)","<p>check if an element is in the range\n"],["new","Foo","Foo.html#method-c-new","(args={})","<p>constructor\n"],["new","Myset","Myset.html#method-c-new","(content)","<p>Constructor\n"],["new","Ranges","Ranges.html#method-c-new","(content)","<p>Constructor\n"],["normalize","Ranges","Ranges.html#method-i-normalize","()","<p>return a normalized copy\n"],["normalize!","Ranges","Ranges.html#method-i-normalize-21","()","<p>merge adjacent sub ranges\n"],["priorities","Todo","Todo.html#method-i-priorities","()","<p>Return a list of priorities\n"],["process","Object","Object.html#method-i-process","(filename)","<p>Process a file\n"],["section_number","Ranges","Ranges.html#method-i-section_number","()","<p>returns the number of subranges\n"],["setup","UnitTest","UnitTest.html#method-i-setup","()",""],["sin","Trig","Trig.html#method-c-sin","(x)","<p>Trigonometric Sin function\n"],["size","Myset","Myset.html#method-i-size","()","<p>returns the size of the set\n"],["size","Ranges","Ranges.html#method-i-size","()","<p>returns the number of elements\n"],["test_default","UnitTest","UnitTest.html#method-i-test_default","()",""],["test_that_it_will_not_blend","UnitTest","UnitTest.html#method-i-test_that_it_will_not_blend","()",""],["test_that_kitty_can_eat","UnitTest","UnitTest.html#method-i-test_that_kitty_can_eat","()",""],["to_s","Myset","Myset.html#method-i-to_s","()","<p>Image\n"],["to_s","Ranges","Ranges.html#method-i-to_s","()","<p>Image\n"],["usage","Object","Object.html#method-i-usage","()","<p>Display on line help\n"],["README","","README_rdoc.html","","<p>README\n<p>This project Ruby Test Framework is the third version of the Fred&#39;s\nTest Framework. The first …\n"]]}}